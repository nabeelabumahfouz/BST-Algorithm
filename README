Name: Nabeel Abu-Mahfouz
Email: nabumahf@uoguelph.ca
Student #: 1104136

Assignment #4:

Compile and running instructions:
The .tar file submitted contains 3 '.c' files (P11.c, P12.c, P2.c).

To run the program type "make" (this will produce 3 executable files -> one for each part of the assignment).

From here, you can do the following to run each file:
    Running Problem 1.1 -> type ./P11
    Running Problem 1.2 -> type ./P12
    Running Problem 2   -> type ./P21



Here is a brief summary of each application:

P11:
    This program will create an optimal BST, calculate the main and root tables, and prompt the user to enter a keyword; AS WELL AS A FILENAME. This keyword will then be used to search the tree using DYNAMIC PROGRAMMING. Whenever the program compares user input K with word W at node V, it displays: the word W, the minimum avaerage number of comparisons of the subtree rooted at V (3 values after decimal point), and the next subtree to go to (left or right). If the program does not find the key it displays "NOT FOUND!!!" after finishing its comparisons.
    
    An example of the output found in my program for P11.c is as follows:

    "
        root@DESKTOP-4MO0DJ7:~/cis3490/A4# ./P11
        Please enter the name of the file (for P11): data_A4_Q1.txt
        Please enter in a keyword: undergraduate
        Compared with of (6.147), go to RIGHT subtree.
        Compared with the (1.972), go to RIGHT subtree.
        Compared with university (0.412), go to LEFT subtree.
        Compared with to (0.156), go to RIGHT subtree.
        Compared with undergraduate (0.053), FOUND KEY!!!

        root@DESKTOP-4MO0DJ7:~/cis3490/A4# 

    "

P12:
    This program works exactly the same as as P11 except it uses the greedy technique for BST. 

    An example of the output found in my program for P12.c is as follows:

    "
        root@DESKTOP-4MO0DJ7:~/cis3490/A4# ./P12
        Please enter the name of the file (for P12): data_A4_Q1.txt
        Please enter in a keyword: wine
        Compared with the (0.061), go to RIGHT subtree.
        Compared with to (0.031), go to RIGHT subtree.
        Compared with university (0.018), go to RIGHT subtree.
        Compared with with (0.005), go to LEFT subtree.
        Compared with which (0.004), go to RIGHT subtree.
        Compared with winter (0.002), go to LEFT subtree.
        Compared with will (0.001), go to RIGHT subtree.
        Word not found!
        root@DESKTOP-4MO0DJ7:~/cis3490/A4#

    "



P2:
    This program implements the Gale-Shapley stable marriage algorithm. The program reads in a file storing preference lists and outputs the solution. The inputs can either be a 3x3 or 4x4 matrix which is shown in the sample output below.


    An example of the output found in my program for P2.c for a 3x3 matrix is as follows:


    "
    root@DESKTOP-4MO0DJ7:~/cis3490/A4# ./P2
    Please enter a filename: test.txt
    Matrix 1:
    2 1 3 
    2 3 1 
    3 2 1 

    Matrix 2:
    2 3 1 
    3 1 2 
    2 3 1 


    Result Matrix:
    1 0 0 
    0 0 1 
    0 1 0 
    root@DESKTOP-4MO0DJ7:~/cis3490/A4# 

    "


    An example of the output found in my program for P2.c for a 4x4 matrix is as follows:


    "
        root@DESKTOP-4MO0DJ7:~/cis3490/A4# ./P2
        Please enter a filename: test.txt
        Matrix 1:
        1 2 3 4 
        1 4 3 2 
        2 1 3 4 
        4 2 3 1 

        Matrix 2:
        4 3 1 2 
        2 4 1 3 
        4 1 3 2 
        3 2 1 4 


        Result Matrix:
        0 0 1 0 
        0 0 0 1 
        1 0 0 0 
        0 1 0 0 
        root@DESKTOP-4MO0DJ7:~/cis3490/A4#

    "
